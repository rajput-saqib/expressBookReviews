10. Get all books – Using async callback function
const fetchBooks = (callback) => {
  setTimeout(() => {
    const books = [
      { title: 'Book 1', author: 'Author 1' },
      { title: 'Book 2', author: 'Author 2' },
      { title: 'Book 3', author: 'Author 3' }
    ];

    callback(null, books);
  }, 1000);
};

const getAllBooks = async () => {
  return new Promise((resolve, reject) => {
    fetchBooks((error, books) => {
      if (error) {
        reject(error);
      } else {
        resolve(books);
      }
    });
  });
};

getAllBooks()
  .then((books) => {
    console.log(books);
  })
  .catch((error) => {
    console.error(error);
  });

11. Search by ISBN – Using Promises
const searchByISBN = (isbn) => {
  return new Promise((resolve, reject) => {
    setTimeout(() => {
      const book = { title: 'Book 1', author: 'Author 1', isbn: isbn };
      resolve(book);
    }, 1000);
  });
};

const isbn = '1234567890';

searchByISBN(isbn)
  .then((book) => {
    console.log(book);
  })
  .catch((error) => {
    console.error(error);
  });


12. Search by Author
const searchByAuthor = (author) => {
  return new Promise((resolve, reject) => {
    setTimeout(() => {
      const book = { title: 'Book 1', author: 'Author 1', isbn: '1234567890' };

      if (book.author.toLowerCase() === author.toLowerCase()) {
        resolve(book);
      } else {
        reject(new Error('Book not found'));
      }
    }, 1000);
  });
};

const searchQuery = 'Author 1';

searchByAuthor(searchQuery)
  .then((book) => {
    console.log(book);
  })
  .catch((error) => {
    console.error(error);
  });




13. Search by title
const searchByTitle = (title) => {
  return new Promise((resolve, reject) => {
    setTimeout(() => {
      const book = { title: 'Book 1', author: 'Author 1', isbn: '1234567890' };

      if (book.title.toLowerCase() === title.toLowerCase()) {
        resolve(book);
      } else {
        reject(new Error('Book not found'));
      }
    }, 1000);
  });
};

const searchQuery = 'Book 1';

searchByTitle(searchQuery)
  .then((book) => {
    console.log(book);
  })
  .catch((error) => {
    console.error(error);
  });
